# Terraform Deploy Template - Single Responsibility: Deploy infrastructure to specific environment
parameters:
- name: environment
  type: string
- name: serviceConnection
  type: string

steps:
- checkout: self

- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: $(terraformVersion)

- task: TerraformTaskV4@4
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra/envs/${{ parameters.environment }}'
    backendServiceArm: '${{ parameters.serviceConnection }}'
    backendAzureRmResourceGroupName: '$(tfStateResourceGroup)'
    backendAzureRmStorageAccountName: '$(tfStateStorageAccount)'
    backendAzureRmContainerName: '$(tfStateContainer)'
    backendAzureRmKey: '${{ parameters.environment }}.terraform.tfstate'

- task: TerraformTaskV4@4
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra/envs/${{ parameters.environment }}'
    environmentServiceNameAzureRM: '${{ parameters.serviceConnection }}'
    commandOptions: '-var-file="terraform.tfvars" -out=tfplan'

- task: TerraformTaskV4@4
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra/envs/${{ parameters.environment }}'
    environmentServiceNameAzureRM: '${{ parameters.serviceConnection }}'
    commandOptions: 'tfplan'